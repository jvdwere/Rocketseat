O como já vimos antes, em variáveis, em Functions o Hoisting ocorre, quando a função
 é chamada antes de ser criada, então essa function sofre, digamos que, uma elevação
 podendo assim ser compreendida pelo JS mesmo tendo sua ordem invertida,
 
    Exemplo 1 

        melhorDoMundo()

        function melhorDoMundo(){

            console.log("Santos FC")
        }

    Entao basicamente oque acontece é, COMO SE! o JS pegasse essa function e jogasse 
     para cima da chamada, e seguindo eu curso normal.
 
Atentar para estrutura utilizada, por function do tipo expression, pois esse tipo de
 function não sofrem esse Hoisting.


    Exemplo 2 Onde não acontece o Hoisting

        melhorDoMundo()

        const = melhorDoMundo = () => {
            
            console.log("Santos FC")

        }

    Neste caso o Hoisting não acontece e a function não é executada, pois é como se o
     JS apenas elevasse a variável melhorDoMundo e não a arrow function que nela ha (qualquer estrutura
     de function do tipo expression não sofre Hoisting) 
